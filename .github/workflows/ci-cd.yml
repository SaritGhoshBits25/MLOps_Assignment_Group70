name: MLOps CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        py -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run data preprocessing
      run: |
        py src/data_preprocessing.py
    
    - name: Train models
      run: |
        py src/train.py
    
    - name: Run tests
      run: |
        pytest tests/ -v
    
    - name: Test API startup
      run: |
        timeout 30s py src/api.py &
        sleep 10
        curl -f http://localhost:8000/health || exit 1
        pkill -f "py src/api.py"

  build-and-push:
    needs: test
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies and train model
      run: |
        py -m pip install --upgrade pip
        pip install -r requirements.txt
        py src/data_preprocessing.py
        py src/train.py
    
    - name: Build Docker image
      run: |
        docker build -t iris-api:latest .
    
    - name: Test Docker container
      run: |
        docker run -d -p 8000:8000 --name test-container iris-api:latest
        sleep 30
        curl -f http://localhost:8000/health || exit 1
        docker stop test-container
        docker rm test-container
    
    - name: Log in to Docker Hub
      if: true  # Set to true and add secrets if you want to push to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Push to Docker Hub
      if: true  # Set to true if you want to push to Docker Hub
      run: |
        docker tag iris-api:latest wp1412011989/iris-api:latest
        docker push wp1412011989/iris-api:latest

  deploy:
    needs: build-and-push
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Run Docker container
      run: docker run -d -p 8000:8000 --name iris_container wp1412011989/iris-api:latest
    - name: Deploy notification
      run: |
        echo "Deployment step - would deploy to production environment"
        echo "This is where you would add your deployment scripts"
